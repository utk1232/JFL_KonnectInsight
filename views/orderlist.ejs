<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta name="description" content="Web site created using create-react-app" />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <title>Dominos Feedback</title>
    <link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet'>
    <link rel="stylesheet" href="/css/index.css">
    <link rel="stylesheet" href="/css/select-order.css">
</head>

<body>
   
    <form action="/the4CheesePizza" method="post">
        <div class="choice_container ">
           
            <div class="property-default">
                <div style="width: 100%; text-align:right;">
                    <button class="btn btn-danger" type="button" onclick="logout()">Logout</button>
                </div>
    
                <div class="frame btnPara">
                    <p class="text-wrapper">Please select the order for which you want to give feedback</p>
                   
                </div>
                <div id="user-info" style="display:flex; justify-content: space-between; width: 65%;">
                    <p><strong>Username:</strong> <span id="username"></span></p>
                    <p><strong>Phone Number:</strong>  <span id="phone-number"></span></p>
                </div>
                
               
                <div class="div">
                    <div class="frame-2">
                        <div class="frame-3">
                            <% for (let i = 0; i < orders.length; i++) { %>
                                <% const orderDate1 = new Date(orders[i].orderTimeStamp); %>
                                <div class="frame-4" data-items='{"Date": "<%= orderDate1.toLocaleDateString() %>", "Time": "<%= orderDate1.toLocaleTimeString() %>", "total": <%= orders[i].netPrice %>}'>
                                    <div class="orderNo">
                                        <div>Order</div>
                                        <p>
                                            <%= orders[i].orderId %>
                                        </p>
                                    </div>
                                    <p class="product p"
                                        data-items='<%= JSON.stringify(orders[i].items.map(item => ({ name: item.product.name, quantity: item.quantity }))) %>'>
                                        <%= orders[i].items[0].product.name %>
                                        <% if (orders[i].items.length > 1) { %><br>
                                            + <%= orders[i].items.length - 1 %> other detail(s)                                
                                        <% } %>
                                        <svg class="more" width="10" height="15" viewBox="0 0 10 17"
                                            fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M9.19709 8.10449C9.19709 8.26109 9.16992 8.40561 9.11576 8.53816C9.05555 8.67062 8.96522 8.79711 8.8447 8.91763L1.80689 15.8018C1.60211 16.0006 1.35517 16.1 1.06607 16.1C0.867306 16.1 0.689632 16.0518 0.533033 15.9554C0.370412 15.8651 0.24092 15.7416 0.144553 15.585C0.0481848 15.4284 1.65426e-06 15.2507 1.65426e-06 15.052C1.65426e-06 14.7689 0.111426 14.5159 0.334274 14.2931L6.67646 8.10449L0.334274 1.9159C0.111425 1.69305 0 1.43708 0 1.14797C0 0.955237 0.048184 0.780573 0.144551 0.623973C0.24092 0.461354 0.370412 0.334871 0.533033 0.244527C0.689632 0.14816 0.867306 0.0999756 1.06607 0.0999756C1.35517 0.0999756 1.60211 0.202366 1.80689 0.407147L8.8447 7.29139C8.96522 7.41185 9.05555 7.53833 9.11576 7.67083C9.16992 7.80334 9.19709 7.94789 9.19709 8.10449Z"
                                                fill="#04489D" />
                                        </svg>
                                    </p>
                                    <div class="frame-5">
                                        <% const orderDate = new Date(orders[i].orderTimeStamp); const localDate = orderDate.toLocaleString(); %>
                                        <div class="text-wrapper-2">
                                            <%= localDate %>
                                        </div>
                                        <img class="line" src="img/line-21.svg" />
                                        <div class="text-wrapper-2">₹<%= orders[i].netPrice %></div>
                                    </div>
                                </div>
                            <% } %>
                        </div>
                        
                    </div>
                    <div class="frame-wrapper">
                        <div class="frame-7">
                            <div class="frame-8">
                                <div class="frame-9">
                                    <div class="text-wrapper-2">Date of order</div>
                                    <div class="text-wrapper-3 date-of-order"></div>
                                </div>
                                <div class="frame-9">
                                    <div class="text-wrapper-2">Time of order</div>
                                    <div class="text-wrapper-3 time-of-order"></div>
                                </div>
                                <div class="frame-9">
                                    <div class="text-wrapper-2">Order Total</div>
                                    <div class="text-wrapper-3 order-total"></div>
                                </div>
                            </div>
                            <div class="frame-10">
                                <div class="text-wrapper-4">Total number of items:</div>
                                <div class="text-wrapper-5"></div>
                            </div>

                            <div class="frame-22">
                                <div class="frame-12">
                                    <div class="text-wrapper-6">Item</div>
                                    <div class="text-wrapper-7">Quantity</div>
                                </div>
                                <div class="frame-11">

                                </div>  
                            </div>
                        </div>
                    </div>
                </div>
                <div class="frame-14">
                    <!-- <div class="div-wrapper cursor" onclick="stock()">
                        <div class="text-wrapper-10 ">In-Store Order</div>
                    </div> -->
                    <div class="frame-15 cursor" onclick="pizza()">
                        <div class="text-wrapper-11 ">Select and Proceed <svg style="margin-top: -1px;" width="10" height="14" viewBox="0 0 10 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M9.59855 8.00445C9.59855 8.16105 9.57138 8.30557 9.51722 8.43812C9.457 8.57058 9.36668 8.69707 9.24616 8.81759L2.20835 15.7018C2.00357 15.9005 1.75663 15.9999 1.46752 15.9999C1.26877 15.9999 1.09109 15.9517 0.934492 15.8554C0.771871 15.765 0.642379 15.6416 0.546011 15.485C0.449644 15.3284 0.40146 15.1507 0.40146 14.9519C0.40146 14.6688 0.512885 14.4159 0.735732 14.1931L7.07791 8.00445L0.735732 1.81586C0.512883 1.59301 0.401459 1.33704 0.401459 1.04794C0.401459 0.8552 0.449643 0.680536 0.54601 0.523937C0.642379 0.361317 0.771871 0.234835 0.934492 0.14449C1.09109 0.0481229 1.26877 -6.10352e-05 1.46752 -6.10352e-05C1.75663 -6.10352e-05 2.00357 0.102329 2.20835 0.307111L9.24616 7.19135C9.36668 7.31181 9.457 7.43829 9.51722 7.5708C9.57138 7.70331 9.59855 7.84786 9.59855 8.00445Z" fill="white"/>
                            </svg>
                             </div>
                        <img class="vector" src="img/vector.svg" />
                    </div>
                </div>
            </div>
        </div>
        </div>
    </form>


    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const orders = document.querySelectorAll('.frame-4');
            const frame8 = document.querySelector('.frame-8');
            const dateOfOrder = frame8.querySelector('.date-of-order');
            const timeOfOrder = frame8.querySelector('.time-of-order');
            const orderTotal = frame8.querySelector('.order-total');
            const frame11 = document.querySelector('.frame-11');
            const productElements = document.querySelectorAll('.product');
            const textwrapper = document.querySelector(".text-wrapper-6");
            const textwrapper1 = document.querySelector(".text-wrapper-7");
            const totalItemsElement = document.querySelector('.text-wrapper-5'); // Element to show total number of items
    
            textwrapper.style.color = 'black';
            textwrapper.style.fontSize = '15px';
            textwrapper.style.fontWeight = '500';
    
            textwrapper1.style.color = 'black';
            textwrapper1.style.fontSize = '15px';
            textwrapper1.style.fontWeight = '500';
    
            // Display details of the first frame-4 element by default
            if (orders.length > 0) {
                const firstOrderDataItems = JSON.parse(orders[0].getAttribute('data-items'));
                dateOfOrder.textContent = firstOrderDataItems.Date;
                timeOfOrder.textContent = firstOrderDataItems.Time;
                orderTotal.textContent = `₹${firstOrderDataItems.total}`;
    
                // Calculate and display the total number of items for the first order
                const firstOrderItems = JSON.parse(productElements[0].getAttribute('data-items'));
                const totalItemsCount = firstOrderItems.reduce((total, item) => total + item.quantity, 0);
                totalItemsElement.textContent = totalItemsCount;
            }
    
            orders.forEach(orderElement => {
                orderElement.addEventListener('click', () => {
                    const dataItems = JSON.parse(orderElement.getAttribute('data-items'));
                    dateOfOrder.textContent = dataItems.Date;
                    timeOfOrder.textContent = dataItems.Time;
                    orderTotal.textContent = `₹${dataItems.total}`;
                });
            });
    
            const frames = document.querySelectorAll('.frame-4');
    
            frames.forEach(frame => {
                frame.addEventListener('click', () => {
                    frames.forEach(f => f.classList.remove('active'));
                    frame.classList.add('active');
                });
            });
    
            function displayItems(product) {
                frame11.innerHTML = '';
                let items = JSON.parse(product.getAttribute('data-items'));
    
                items.forEach(item => {
                    let rowDiv = document.createElement('div');
                    rowDiv.className = 'item-row';
    
                    let itemDiv = document.createElement('div');
                    itemDiv.className = 'text-wrapper-6';
                    itemDiv.textContent = item.name;
    
                    let quantityDiv = document.createElement('div');
                    quantityDiv.className = 'text-wrapper-7';
                    quantityDiv.textContent = item.quantity;
    
                    rowDiv.appendChild(itemDiv);
                    rowDiv.appendChild(quantityDiv);
                    frame11.appendChild(rowDiv);
    
                    let hr = document.createElement('hr');
                    frame11.appendChild(hr);
                });
    
                // Update total number of items for the selected order
                const totalItemsCount = items.reduce((total, item) => total + item.quantity, 0);
                totalItemsElement.textContent = totalItemsCount;
            }
    
            productElements.forEach(product => {
                product.addEventListener('click', () => {
                    displayItems(product);
                });
            });
    
            if (productElements.length > 0) {
                displayItems(productElements[0]);
            }
        });
    
        function stock() {
            window.location.href = "http://localhost:3000/orderSelection";
        }
    
        function pizza() {
            console.log("hiii")
            window.location.href = "http://localhost:3000/the4CheesePizza";
        }
    
        function logout() {
            // Any logout logic here, such as clearing session or tokens
            console.log("Logging out");
            // Redirect to the route that renders home.ejs
            window.location.href = "/home";
        }
    </script>
    





 


</body>

</html>